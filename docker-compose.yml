version: "3.9"
networks:
  practice:
    driver: bridge
services:
  links1:
    container_name: links1
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 1024M
    networks:
      - practice
    depends_on:
      - postgres_db
      - rabbitmq
      - redis
  links2:
    container_name: links2
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 1024M
    networks:
      - practice
    depends_on:
      - postgres_db
      - rabbitmq
      - redis
  consumer1:
    container_name: consumer1
    build:
      context: .
      dockerfile: DockerFileConsumer
    deploy:
      resources:
        limits:
          memory: 1024M
    networks:
      - practice
    depends_on:
      - postgres_db
      - redis
      - rabbitmq
  consumer2:
    container_name: consumer2
    build:
      context: .
      dockerfile: DockerFileConsumer
    deploy:
      resources:
        limits:
          memory: 1024M
    networks:
      - practice
    depends_on:
      - postgres_db
      - redis
      - rabbitmq
  postgres_db:
    container_name: postgres
    image: postgres:15.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: Links
    networks:
      - practice
    volumes:
      - postgres-data:/var/lib/postgresql/data
  rabbitmq:
    container_name: rabbitmq
    tty: true
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    image: rabbitmq:3.12-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - practice
  nginx:
    image: nginx:latest
    container_name: nginx
    build:
      context: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - links1
      - links2
    networks:
      - practice
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - practice
volumes:
  postgres-data:
  redis: